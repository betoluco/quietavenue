AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Creates a database Instance, a database cluster, a secret from secrets
  manager for the superuser of the postgres database and a private subnet
  group needed for the database creation
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  Env:
    Type: String
    AllowedValues:
    - dev
    - prod
    Description: 
      Environment in which the application will be deployed. 
      Allowed values [dev, prod]
  
  Project:
    Type: String
    Description: Name of the project for tags
  
  VPCPrivateSubnet1a:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet in 1a availability zone
  
  
  VPCPrivateSubnet1b:
    Type: AWS::EC2::Subnet::Id
    Description: The subnet in 1a availability zone
    
  Port:
    Type: Number
    Description: The port used to access the PostgreSQL database
    
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Id of the security group that allows ingress the database proxy to the database
    
Conditions:
  IsProduction: !Equals [!Ref Env, prod]
  
Resources:
  DBSuperuserPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        !Sub
        - ${Environment}-${Project}-DB-superuser-password-secret-${Id}
        - Project: !Ref Project
          Environment: !Ref Env
          Id: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]] 
      Description: Secret with an autogenerated password for database superuse
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: password
        PasswordLength: 30
        ExcludePunctuation: true
      Tags:
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Env
        
  PrivateSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: groups private subnets in different availabilities
        zones, required for the creation of RDS database
      SubnetIds:
      - !Ref VPCPrivateSubnet1a
      - !Ref VPCPrivateSubnet1b
      Tags:
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Env
  
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: !If [IsProduction, Retain, Delete]
    Properties:
      AllocatedStorage: 50
      DBInstanceIdentifier:
        !Sub
        - ${Environment}-${Project}-database-instance-${Id}
        - Project: !Ref Project
          Environment: !Ref Env
          Id: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]] 
      DBSubnetGroupName: !Ref PrivateSubnetGroup
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername:
        !Sub
        - '{{resolve:secretsmanager:${secretName}:SecretString:username}}'
        - secretName: !Ref DBSuperuserPasswordSecret
      MasterUserPassword:
        !Sub
        - '{{resolve:secretsmanager:${secretName}:SecretString:password}}'
        - secretName: !Ref DBSuperuserPasswordSecret
      Port: !Ref Port
      VPCSecurityGroups:
        - Ref: DBSecurityGroup
      Tags:
      - Key: Project
        Value: !Ref Project
      - Key: Environment
        Value: !Ref Env

Outputs:
   DBInstance:
    Description: Id for the database instance
    Value: !Ref DBInstance